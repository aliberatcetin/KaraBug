source->funcs decls sts
decl->int ID|float ID|bool ID|char ID
funcs->funcst funcs|$
decls->decl; decls|$
block->begin sts end
sts->st sts|$
st->ifst|whilest|elsest|assignmentst|returnst|$
ifst->if (booleanexp) block
whilest->while (booleanexp) block
funcst->func ID(params):type block
returnst->return arithmeticexp;
type->int|float|void|bool|char
funcname->ID
elsest->st else st
assignmentst->ID = arithmeticexp;
arithmeticexp->multexp and arithmeticexp|multexp or arithmeticexp|multexp - arithmeticexp|multexp + arithmeticexp|multexp % arithmeticexp|multexp
multexp->simpleexp * multexp|simpleexp / multexp|simpleexp
simpleexp->ID|INTNUM|FLOATNUM|BOOLVAL|CHARACTER|(arithmeticexp)|ID(funccallparams)
funccalparams->simepleexp, funccallparams|$
booleanexp->arithmeticexp boolop arithmeticexp
boolop->>|<|==|<=|>=|!=
params->decl, params|$